@model Vidly.ViewModels.CustomerFormVM

@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New Customer</h2>

@using (Html.BeginForm("Save", "Customers"))
{
    @Html.ValidationSummary(true, "Please fix the following errors");
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name)
        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Name)
    </div>

    <div class="form-group mt-2">
        @Html.LabelFor(m => m.Customer.MembershipTypeId, "Membership Type")
        @Html.DropDownListFor(m => m.Customer.MembershipTypeId,
                            new SelectList(Model.MembershipTypes, "Id", "Name"),
                            "Select Membership Type",
                            new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.MembershipTypeId)
    </div>

    <div class="form-group mt-2">
        @Html.LabelFor(m => m.Customer.BirthDate, "Date of Birth")
        @Html.TextBoxFor(m => m.Customer.BirthDate, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.BirthDate)
    </div>

    <div class="form-check mt-3">
        @Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsletter, new { @class = "form-check-input" })
        @Html.LabelFor(m => m.Customer.IsSubscribedToNewsletter, "Subscribed to Newsletter?")
    </div>

    @Html.HiddenFor(m => m.Customer.Id)
    <button type="submit" class="btn btn-primary mt-3">Save</button>
}

@* 
    Enabling the client-side validation.
    Create a section called scripts
    This will be generated in _Layout.cshtml
*@
@section scripts 
{
    @Scripts.Render("~/bundles/jqueryval")
}